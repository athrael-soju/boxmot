services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant_storage:/qdrant/storage

  neo4j:
    image: neo4j:5.26.0
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./neo4j_data:/data
      - ./neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]

  api_gateway:
    build:
      context: ./services/api_gateway
    container_name: api_gateway
    ports:
      - "80:80"
    depends_on:
      - core_service
      - query_service

  core_service:
    build:
      context: ./services/core_service
    container_name: core_service
    ports:
      - "8001:8001"
    volumes:
      - /tmp:/tmp
    depends_on:
      - kafka

  video_service:
    build:
      context: ./services/video_service
    container_name: video_service
    ports:
      - "8002:8002"
    volumes:
      - /tmp:/tmp
    depends_on:
      - kafka
      - qdrant

  audio_service:
    build:
      context: ./services/audio_service
    container_name: audio_service
    ports:
      - "8003:8003"
    volumes:
      - /tmp:/tmp
    env_file:
      - .env
    depends_on:
      - kafka
      - qdrant

  fusion_service:
    build:
      context: ./services/fusion_service
    container_name: fusion_service
    ports:
      - "8005:8005"
    volumes:
      - /tmp:/tmp
    depends_on:
      - kafka
      - neo4j

  query_service:
    build:
      context: ./services/query_service
    container_name: query_service
    ports:
      - "8004:8004"
    depends_on:
      - qdrant
      - neo4j 